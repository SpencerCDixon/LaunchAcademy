{\rtf1\ansi\ansicpg1252\cocoartf1265\cocoasubrtf210
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 \
Tips For Breakable Toy\
-non CRUD\
-using other API\'92s in order to:\
	-show you can learn quickly\
	-know how to figure things out on your own\
	-will be adaptable to new API\'92s\
-avoid signup process during Demo Day\
-clearly articulate the problem immediately in a concrete/monetary way.\
	ex. I was wasting X dollars a week on food going bad until I made my app and now I\'92m saving Y amount a week which turns into Z a year in savings.\
-have a 1-2 sentence elevator pitch for WHY you created the app in the first place for post demo-day mingling.\
\
Golden Question (Ask each EE individually)\
What gems/API\'92s/calculations/processes do you see that could take my breakable toy further and differentiate it from normal CRUD apps 
\i THAT YOU CAN HELP ME implement. \
\
}